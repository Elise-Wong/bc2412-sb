package com.bootcamp.customer.demo_sb_customer;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;

import com.bootcamp.customer.demo_sb_customer.entity.CustomerEntity;
import com.bootcamp.customer.demo_sb_customer.repository.CustomerRepository;

@DataJpaTest // load repository related beans only
public class CustomerRepositoryTest {
  @Autowired
  private CustomerRepository customerRepository;

  // ! This Unit Test provded the repository bean, generated by Hibernate, is correct.
  @Test //to many CRUD
  void testSaveAndFindAll(){
    //test before
    //empty list
    List<CustomerEntity> beforeSave = customerRepository.findAll();
    assertEquals(0, beforeSave.size());

    //Step 1: create object
    // no id, but check return id...因為auto出id no.
    // ! Mock behavior for the mock bean
    CustomerEntity john = CustomerEntity.builder()
      .email("John@gmail.com")
      .name("john")
      .build();
  
    CustomerEntity customerEntity1 = customerRepository.save(john);
    assertEquals("john", customerEntity1.getName());
    assertEquals("John@gmail.com", customerEntity1.getEmail());
    assertEquals(1L, customerEntity1.getId());

    CustomerEntity mary = CustomerEntity.builder()
      .email("mary@gmail.com")
      .name("mary")
      .build();

    CustomerEntity customerEntity2 = customerRepository.save(mary);
    assertEquals("mary", customerEntity2.getName());
    assertEquals("mary@gmail.com", customerEntity2.getEmail());
    assertEquals(2L, customerEntity2.getId());


    //test after
    List<CustomerEntity> afterSaveJohn = customerRepository.findAll();
    assertEquals(1, afterSaveJohn.size());

    List<CustomerEntity> afterSaveMary = customerRepository.findAll();
    assertEquals(2, afterSaveMary.size());



  }
  
}
